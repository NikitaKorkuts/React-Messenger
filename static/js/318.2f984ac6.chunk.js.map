{"version":3,"file":"static/js/318.2f984ac6.chunk.js","mappings":"uJACA,EAA8B,2BAA9B,EAAiE,qB,SCSpDA,EAA4B,SAAC,GAInC,IAHHC,EAGE,EAHFA,SAGE,IAFFC,SAAAA,OAEE,aADFC,MAAAA,OACE,MADM,GACN,EACF,OACI,gBAAKC,UAAWC,EAAgB,KAAOH,EAAWG,EAAU,IAA5D,UACI,gCACKJ,EACAC,IAAY,0BAAOC,QAInC,C,kGCjBYG,EAA4B,SAAC,GAOnC,IAAD,IANFC,KAAAA,OAME,MANK,OAML,EALFC,EAKE,EALFA,KACAC,EAIE,EAJFA,QAIE,IAHFP,SAAAA,OAGE,aAFFC,MAAAA,OAEE,MAFK,GAEL,MADFO,MAAAA,OACE,MADM,CAAC,EACP,EACIC,EAA6B,CAAC,EAIpC,MAHa,aAATJ,IAAmC,IAAZE,IACvBE,EAAWF,SAAU,IAGrB,SAAC,IAAD,CACIN,MAAOA,EACPD,SAAUA,EAFd,UAII,kCACIK,KAAMA,EACNC,KAAMA,GACFE,GACAC,KAInB,C,2IC9BD,GAAgB,UAAY,yBAAyB,mBAAqB,kCAAkC,QAAU,uBAAuB,aAAe,4BAA4B,aAAe,4BAA4B,kBAAoB,iCAAiC,cAAgB,6BAA6B,oBAAsB,mCAAmC,UAAY,yBAAyB,aAAe,4BAA4B,sBAAwB,qCAAqC,oBAAsB,oC,SCWjiB,GAAeC,EAAAA,EAAAA,KALS,SAACC,GAAD,MAA0B,CAC9CC,OAAQD,EAAME,KAAKD,OACnBE,WAAYH,EAAME,KAAKC,WAFH,GAKgB,CAACC,MAAAA,EAAAA,IAAzC,ECFyC,SAAC,GAAiC,IAAhCH,EAA+B,EAA/BA,OAAQE,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,MAC3D,GAAIH,EACA,OACI,SAAC,KAAD,CAAUI,GAAI,aAMtB,IAWMC,EAAmBC,EAAAA,KAAaC,MAAM,CACxCC,MAAOF,EAAAA,KAEFE,MAAM,4JACNC,IAAI,GAAI,gLACRC,SAAS,yFACdC,SAAUL,EAAAA,KAELG,IAAI,GAAI,0KACRC,SAAS,mFACdE,WAAYN,EAAAA,KAEPG,IAAI,GAAI,yOAGjB,OACI,SAAC,KAAD,CACII,cAAe,CACXL,MAAO,GACPG,SAAU,GACVG,YAAY,EACZF,WAAY,IAEhBG,gBAAc,EACdC,SAnCO,SAACC,EAAD,GAAyE,IAAhDC,EAA+C,EAA/CA,cAAeC,EAAgC,EAAhCA,UAC7CC,EAAgB,CAClBZ,MAAOS,EAAOT,MACdG,SAAUM,EAAON,SACjBG,WAAYG,EAAOH,WACnBO,QAASJ,EAAOL,YAEpBT,EAAMiB,EAAeD,GACrBD,GAAc,EACjB,EA2BOb,iBAAkBA,EATtB,SAWK,gBACGY,EADH,EACGA,OACAK,EAFH,EAEGA,OACAC,EAHH,EAGGA,QACAC,EAJH,EAIGA,aACAC,EALH,EAKGA,WACAC,EANH,EAMGA,QACAC,EAPH,EAOGA,aACAC,EARH,EAQGA,MACAC,EATH,EASGA,aACAC,EAVH,EAUGA,OAVH,OAYG,iBAAMxC,UAAWC,EAAAA,UAAayB,SAAUW,EAAxC,UAEI,iBAAKrC,UAAWC,EAAAA,mBAAhB,WAEI,gBAAKD,UAAWC,EAAAA,aAAhB,UACI,8DAGJ,gBAAKD,UAAWC,EAAAA,QAAhB,UACI,8BACI,kCACA,SAACC,EAAAuC,EAAD,CACIrC,KAAM,QACNN,SAAUmC,EAAQf,OAASc,EAAOd,MAClCnB,MAAOiC,EAAOd,MACdZ,MAAO,CACHoC,SAAUR,EACVS,OAAQR,EACRS,MAAOjB,EAAOT,eAM9B,gBAAKlB,UAAWC,EAAAA,QAAhB,UACI,8BACI,iEACA,SAACC,EAAAuC,EAAD,CACIrC,KAAM,WACNN,SAAUmC,EAAQZ,UAAYW,EAAOX,SACrCtB,MAAOiC,EAAOX,SACdf,MAAO,CACHoC,SAAUR,EACVS,OAAQR,EACRS,MAAOjB,EAAON,kBAM9B,gBAAKrB,UAAWC,EAAAA,QAAhB,UACI,mBAAOD,UAAWC,EAAAA,aAAlB,WACI,gBAAKD,UAAWC,EAAAA,kBAAhB,UACI,SAACC,EAAAuC,EAAD,CACItC,KAAM,WACNC,KAAM,aACNE,MAAO,CACHoC,SAAUR,EACVS,OAAQR,EACRS,MAAOjB,EAAOH,iBAK1B,mHAGPZ,IAAc,iCACX,gBAAKZ,UAAWC,EAAAA,WAAc4C,IAAKjC,KACnC,gBAAKZ,UAAWC,EAAAA,QAAhB,UACI,8BACI,oFACA,SAACC,EAAAuC,EAAD,CACIrC,KAAM,aACNN,SAAUmC,EAAQX,YAAcU,EAAOV,WACvCvB,MAAOiC,EAAOV,WACdhB,MAAO,CACHoC,SAAUR,EACVS,OAAQR,EACRS,MAAOjB,EAAOL,uBAMlC,gBAAKtB,UAAWC,EAAAA,QAAhB,UACI,4BACW,OAANuC,QAAM,IAANA,OAAA,EAAAA,EAAQzC,SAAS,iBAAMC,UAAWC,EAAAA,cAAjB,SAAmCuC,EAAOzC,aAIpE,gBAAKC,UAAWC,EAAAA,QAAhB,UACI,mBACIE,KAAK,SACL2C,UAAWV,IAAYE,GAASC,EAFpC,kDA9Ff,GA2GZ,ICxJD,EARkB,WACd,OACI,0BACI,SAACQ,EAAD,KAGX,C","sources":["webpack://messanger/./src/components/shared/Field/field.module.scss?2f8a","components/shared/Field/Field.tsx","components/ui/Input/Input.tsx","webpack://messanger/./src/components/screens/Login/login.module.scss?52cd","components/screens/Login/LoginContainer.tsx","components/screens/Login/Login.tsx","pages/Login/LoginPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"field_formControl__Vhfti\",\"error\":\"field_error__Bxe+r\"};","import React, {FC} from 'react';\n\nimport s from './field.module.scss';\n\nexport type FieldPropsType = {\n    children: React.ReactNode\n    hasError?: boolean | string\n    error?: string\n}\n\nexport const Field: FC<FieldPropsType> = ({\n    children,\n    hasError = false,\n    error = '',\n}) => {\n    return (\n        <div className={s.formControl + ' ' + (hasError ? s.error : '')}>\n            <>\n                {children}\n                {hasError && <span>{error}</span>}\n            </>\n        </div>\n    );\n};\n\n","import React, {FC} from 'react';\n\nimport {Field} from '../../shared/Field/Field';\n\nimport {ExtraPropsType, InputPropsType} from './input.types';\n\nexport const Input: FC<InputPropsType> = ({\n    type = 'text',\n    name,\n    checked,\n    hasError= false,\n    error= '',\n    props = {},\n}) => {\n    const extraProps: ExtraPropsType = {};\n    if (type === 'checkbox' && checked === true) {\n        extraProps.checked = true;\n    }\n    return (\n        <Field\n            error={error}\n            hasError={hasError}\n        >\n            <input\n                type={type}\n                name={name}\n                {...props}\n                {...extraProps}\n            />\n        </Field>\n    );\n};","// extracted by mini-css-extract-plugin\nexport default {\"formLogin\":\"login_formLogin__w628T\",\"formLogInWithEmail\":\"login_formLogInWithEmail__RTR5e\",\"formRow\":\"login_formRow__RfE1o\",\"formTitleRow\":\"login_formTitleRow__2nNTU\",\"formCheckbox\":\"login_formCheckbox__QD6wv\",\"formCheckboxField\":\"login_formCheckboxField__YZjni\",\"formErrorText\":\"login_formErrorText__kdH3O\",\"formWhiteBackground\":\"login_formWhiteBackground__WITT3\",\"formEmail\":\"login_formEmail__voyjY\",\"formPassword\":\"login_formPassword__+rrl+\",\"formForgottenPassword\":\"login_formForgottenPassword__p5GcZ\",\"formCreateAnAccount\":\"login_formCreateAnAccount__YCHID\"};","import {connect} from 'react-redux';\n\nimport {AppStateType} from '../../../store/store.types';\nimport {login} from '../../../store/auth/auth.actions';\n\nimport {Login} from './Login';\n\nconst mapStateToProps = (state: AppStateType) => ({\n    isAuth: state.auth.isAuth,\n    captchaUrl: state.auth.captchaUrl,\n});\n\nexport default connect(mapStateToProps, {login})(Login);\n","import React, {FC} from 'react';\nimport {Navigate} from 'react-router-dom';\nimport {Formik} from 'formik';\nimport * as yup from 'yup';\n\nimport {Input} from '../../ui/Input/Input';\n\nimport {LoginFormType, LoginPropsType, SubmitPropsType} from './login.types';\nimport s from './login.module.scss';\n\nexport const Login: FC<LoginPropsType> = ({isAuth, captchaUrl, login}) => {\n    if (isAuth) {\n        return (\n            <Navigate to={'/profile'}/>\n        );\n    }\n\n\n\n    const submit = (values: LoginFormType, {setSubmitting, setStatus}: SubmitPropsType) => {\n        const loginFormData = {\n            email: values.email,\n            password: values.password,\n            rememberMe: values.rememberMe,\n            captcha: values.verifyCode,\n        };\n        login(loginFormData, setStatus);\n        setSubmitting(false);\n    };\n\n    const validationSchema = yup.object().shape({\n        email: yup\n            .string()\n            .email('Введен некорректный email адресс')\n            .max(50, 'Вы ввели слишком длинный email адресс')\n            .required('Введите email адресс'),\n        password: yup\n            .string()\n            .max(50, 'Вы ввели слишком длинный пароль')\n            .required('Введите пароль'),\n        verifyCode: yup\n            .string()\n            .max(15, 'Вы ввели слишком длинный код подтверждения'),\n    });\n\n    return (\n        <Formik\n            initialValues={{\n                email: '',\n                password: '',\n                rememberMe: false,\n                verifyCode: '',\n            }}\n            validateOnBlur\n            onSubmit={submit}\n            validationSchema={validationSchema}\n        >\n            {({\n                values,\n                errors,\n                touched,\n                handleChange,\n                handleBlur,\n                isValid,\n                handleSubmit,\n                dirty,\n                isSubmitting,\n                status,\n            }) => (\n                <form className={s.formLogin} onSubmit={handleSubmit}>\n\n                    <div className={s.formLogInWithEmail}>\n\n                        <div className={s.formTitleRow}>\n                            <h1>Войти</h1>\n                        </div>\n\n                        <div className={s.formRow}>\n                            <label>\n                                <p>Email</p>\n                                <Input\n                                    name={'email'}\n                                    hasError={touched.email && errors.email}\n                                    error={errors.email}\n                                    props={{\n                                        onChange: handleChange,\n                                        onBlur: handleBlur,\n                                        value: values.email,\n                                    }}\n                                />\n                            </label>\n                        </div>\n\n                        <div className={s.formRow}>\n                            <label>\n                                <p>Пароль</p>\n                                <Input\n                                    name={'password'}\n                                    hasError={touched.password && errors.password}\n                                    error={errors.password}\n                                    props={{\n                                        onChange: handleChange,\n                                        onBlur: handleBlur,\n                                        value: values.password,\n                                    }}\n                                />\n                            </label>\n                        </div>\n\n                        <div className={s.formRow}>\n                            <label className={s.formCheckbox}>\n                                <div className={s.formCheckboxField}>\n                                    <Input\n                                        type={'checkbox'}\n                                        name={'rememberMe'}\n                                        props={{\n                                            onChange: handleChange,\n                                            onBlur: handleBlur,\n                                            value: values.rememberMe,\n                                        }}\n                                    />\n                                </div>\n\n                                <span>Запомнить меня</span>\n                            </label>\n                        </div>\n                        {captchaUrl && <>\n                            <img className={s.captchaImg} src={captchaUrl}/>\n                            <div className={s.formRow}>\n                                <label>\n                                    <p>Текст выше</p>\n                                    <Input\n                                        name={'verifyCode'}\n                                        hasError={touched.verifyCode && errors.verifyCode}\n                                        error={errors.verifyCode}\n                                        props={{\n                                            onChange: handleChange,\n                                            onBlur: handleBlur,\n                                            value: values.verifyCode,\n                                        }}\n                                    />\n                                </label>\n                            </div>\n                        </>}\n                        <div className={s.formRow}>\n                            <label>\n                                {status?.error && <span className={s.formErrorText}>{status.error}</span>}\n                            </label>\n                        </div>\n\n                        <div className={s.formRow}>\n                            <button\n                                type=\"submit\"\n                                disabled={!isValid && !dirty && isSubmitting}\n                            >\n                                Войти\n                            </button>\n                        </div>\n                    </div>\n\n                </form>\n            )}\n        </Formik>\n    )\n};","import React from 'react';\n\nimport LoginContainer from '../../components/screens/Login/LoginContainer';\n\nconst LoginPage = () => {\n    return (\n        <div>\n            <LoginContainer />\n        </div>\n    );\n};\n\nexport default LoginPage;"],"names":["Field","children","hasError","error","className","s","Input","type","name","checked","props","extraProps","connect","state","isAuth","auth","captchaUrl","login","to","validationSchema","yup","shape","email","max","required","password","verifyCode","initialValues","rememberMe","validateOnBlur","onSubmit","values","setSubmitting","setStatus","loginFormData","captcha","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty","isSubmitting","status","I","onChange","onBlur","value","src","disabled","LoginContainer"],"sourceRoot":""}